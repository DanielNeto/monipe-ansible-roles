- name: Clean PWA Files
  file:
    state: absent
    path: "/var/local/docker/pwa"

- name: Download PWA Template and extract into /etc
  unarchive:
    src: https://github.com/perfsonar/psconfig-web/raw/master/deploy/docker/pwa.sample.tar.gz
    dest: /var/local/docker
    remote_src: yes

- name: Copiar chaves para NGINX
  shell: |
    cp /var/local/docker/pwa-certs/monipe-central.rnp.br.key /var/local/docker/pwa/auth/local.key
    cp /var/local/docker/pwa-certs/monipe-central.rnp.br.cer /var/local/docker/pwa/auth/local.crt

#- name: Gerar Chaves para NGINX
#  shell: |
#    cp /etc/pki/tls/certs/ca-bundle.crt /var/local/docker/pwa/auth/ca-bundle.crt
#    openssl genrsa 4096 -config /etc/pki/tls/openssl.cnf > /var/local/docker/pwa/auth/local.key
#    openssl req -new -key /var/local/docker/pwa/auth/local.key -out /var/local/docker/pwa/auth/local.csr -batch -config  /etc/pki/tls/openssl.cnf
#    openssl x509 -req -days 1825 -in /var/local/docker/pwa/auth/local.csr -signkey /var/local/docker/pwa/auth/local.key -out /var/local/docker/pwa/auth/local.crt

- name: Ajuste arquivo de configuracao NGINX - SSL ON/OFF
  replace:
    path: /var/local/docker/pwa/nginx/conf.d/pwa.conf
    regexp: '(\s+)ssl(\s+)(on|off);$'
    replace: '\n'

- name: Ajuste arquivo de configuracao NGINX - CA Client Verify
  replace:
    path: /var/local/docker/pwa/nginx/conf.d/pwa.conf
    regexp: '^(\s+)ssl_verify_client(\s+)on;$'
    replace: '\n   ssl_verify_client optional_no_ca;\n'

- name: Ajuste arquivo de configuracao NGINX - Chave
  replace:
    path: /var/local/docker/pwa/nginx/conf.d/pwa.conf
    regexp: '^(\s+)ssl_certificate_key(\s+)/etc/nginx/certs/key.pem;$'
    replace: '\n   ssl_certificate_key /certs/local.key;\n'

- name: Ajuste arquivo de configuracao NGINX - Certificado
  replace:
    path: /var/local/docker/pwa/nginx/conf.d/pwa.conf
    regexp: '^(\s+)ssl_certificate(\s+)/etc/nginx/certs/cert.pem;$'
    replace: '\n   ssl_certificate /certs/local.crt;\n'

- name: Ajuste arquivo de configuracao NGINX - Certificado CA
  replace:
    path: /var/local/docker/pwa/nginx/conf.d/pwa.conf
    regexp: '^(\s+)ssl_client_certificate(\s+)/etc/nginx/certs/trusted.pem;$'
    replace: '\n   ssl_client_certificate /certs/ca-bundle.crt;\n'

- name: Ajuste arquivo de configuracao NGINX - Porta 8000
  replace:
    path: /var/local/docker/pwa/nginx/conf.d/pwa.conf
    regexp: '^(\s+)listen(\s+)80;$'
    replace: '\n   listen 8000;\n'

- name: Ajuste arquivo de configuracao NGINX - Porta 8443
  replace:
    path: /var/local/docker/pwa/nginx/conf.d/pwa.conf
    regexp: '^(\s+)listen(\s+)443 ssl;$'
    replace: '\n   listen 8443 ssl;\n'

- name: Desabilitando envio de e-mail
  shell: sed -i '31,34s/^/\/\//' /var/local/docker/pwa/auth/index.js
  args:
    warn: no

- name: Ajustando configuração do IP Público do PWA
  replace:
    path: /var/local/docker/pwa/index.js
    regexp: '<pwa_hostname>'
    replace: "{{ hostvars[inventory_hostname]['ansible_default_ipv4']['address'] }}:8000"

- name: Ajustando configuração do LS do PWA
  replace:
    path: /var/local/docker/pwa/index.js
    regexp: '"gls"'
    replace: '/* "gls"'

- name: Ajustando configuração do LS do PWA
  replace:
    path: /var/local/docker/pwa/index.js
    regexp: '// Private sLS instance'
    replace: '*/ // Private sLS instance'

- name: Ajustando configuração do IP Público do PWA AUTH
  replace:
    path: /var/local/docker/pwa/auth/index.js
    regexp: '<pwa_hostname>'
    replace: "{{ hostvars[inventory_hostname]['ansible_default_ipv4']['address'] }}:8000"

- name: Ajustando configuração do IP Público do PWA
  replace:
    path: /var/local/docker/pwa/nginx/conf.d/pwa.conf
    regexp: 'host/'
    replace: 'host:8443/'

- name: Ajustando caminho público do PWA
  replace:
    path: /var/local/docker/pwa/shared/pwa.ui.js
    regexp: 'hostname.location'
    replace: "hostname+':8000'+location"
  become: yes

- name: Creates directory MONGO
  file:
    path: /var/local/docker/mongo
    state: directory

- name: Creates directory AUTH
  file:
    path: /var/local/docker/auth
    state: directory

- name: Get TIMEZONE from Host
  shell: timedatectl | grep "Time zone" | awk -F" " {'print $3'} | xargs
  register: timezone

- name: Create PWA network
  docker_network:
    name: "pwa"

- name: Docker RUN MONGO Container
  docker_container:
    name: mongo
    image: mongo
    state: started
    restart: yes
    restart_policy: always
    networks:
      - name: "pwa"
    pull: true
    recreate: yes
    volumes:
      - /var/local/docker/mongo:/data/db
    env:
      TZ: "{{ timezone.stdout }}"
  become: yes

- name: Docker RUN SCA-AUTH Cointainer
  docker_container:
    name: sca-auth
    image: perfsonar/sca-auth
    state: started
    restart: yes
    restart_policy: always
    networks:
      - name: "pwa"
    pull: true
    recreate: yes
    volumes:
      - /var/local/docker/pwa/auth:/app/api/config
      - /var/local/docker/auth:/db
    env:
      TZ: "{{ timezone.stdout }}"
  become: yes

- name: Docker RUN PWA-ADMIN1 Container
  docker_container:
    name: pwa-admin1
    image: perfsonar/pwa-admin
    state: started
    restart: yes
    restart_policy: always
    networks:
      - name: "pwa"
    pull: true
    recreate: yes
    volumes:
      - /var/local/docker/pwa:/app/api/config:ro
    env:
      TZ: "{{ timezone.stdout }}"
  become: yes

- name: Docker RUN PWA-PUB1 Container
  docker_container:
    name: pwa-pub1
    image: perfsonar/pwa-pub
    state: started
    restart: yes
    restart_policy: always
    networks:
      - name: "pwa"
    pull: true
    recreate: yes
    volumes:
      - /var/local/docker/pwa:/app/api/config:ro
    env:
      TZ: "{{ timezone.stdout }}"
  become: yes

- name: Docker RUN NGINX Container
  docker_container:
    name: nginx
    image: nginx
    state: started
    restart: yes
    restart_policy: always
    networks:
      - name: "pwa"
    pull: true
    recreate: yes
    published_ports:
      - 8000:8000
      - 8443:8443
      - 9443:9443
    volumes:
      - /var/local/docker/pwa/shared:/shared:ro
      - /var/local/docker/pwa/nginx:/etc/nginx:ro
      - /var/local/docker/pwa/auth:/certs:ro
    env:
      TZ: "{{ timezone.stdout }}"
  become: yes